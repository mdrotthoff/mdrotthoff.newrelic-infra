---
# $Author$
# $Date$
# $Source$


##############################################
# New Relic Infrastructure installation role #
##############################################

- name: Dump the variables / facts known by Ansible for the New Relic Infra role
  include_role:
    name: mdrotthoff.ansible-debug

- name: Configuration for the New Relic Yum repository
  yum_repository:
    name: newrelic_infra-agent
    description: New Relic Infrastructure Agent
    baseurl: "{{ newrelic_infra_repo_baseurl }}"
    gpgcheck: "{{ newrelic_infra_repo_gpgcheck }}"
    repo_gpgcheck: "{{ newrelic_infra_repo_repo_gpgcheck }}"
    gpgkey: "{{ newrelic_infra_repo_gpgkey }}"
    proxy: "{{ newrelic_infra_repo_proxy | default(omit) }}"
    enabled: "{{ newrelic_infra_repo_enabled | default(True) }}"

- name: Install the RPM GPG key
  rpm_key:
    key: "{{ newrelic_infra_repo_gpgkey }}"
    state: present

- name: Install the New Relic Infrastructure Agent package
  yum:
    name: "{{ newrelic_infra_package_name }}"
    state: "{{ newrelic_infra_package_state }}"
    enablerepo: newrelic_infra-agent
  notify:
    - Restart New Relic Agent
  ignore_errors: "{{ ansible_check_mode }}"

- name: Setup New Relic Infrastructure Agent Config file
  template:
    src: newrelic-infra.yml.j2
    dest: "{{ newrelic_infra_config_file }}"
  notify:
    - Restart New Relic Agent

- name: Install plugins for the New Relic Infrastructure Agent
  include_tasks: "{{ item }}.yml"
  loop: "{{ newrelic_infra_plugins }}"
  when:
    - newrelic_infra_plugins is defined

- name: Configure logrotate to ensure the New Relic Infrastructure Agent log files remain under control
  include_role:
    name: mdrotthoff.logrotate
  vars:
    logrotate_scripts:
      - name: newrelic_infra
        paths:
          - "{{ newrelic_infra_config_log_path }}/{{ newrelic_infra_config_log_file }}"
        options:
          - missingok
          - compress
          - delaycompress
          - notifempty

- name: Configure the New Relic Infrastructure service
  service:
    name: "{{ newrelic_infra_service_name }}"
    state: "{{ newrelic_infra_service_state }}"
    enabled: "{{ newrelic_infra_service_enabled }}"

